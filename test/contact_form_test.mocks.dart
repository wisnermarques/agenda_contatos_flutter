// Mocks generated by Mockito 5.4.6 from annotations
// in agenda_contatos_flutter/test/contact_form_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:agenda_contatos_flutter/services/contact_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseClient_0 extends _i1.SmartFake
    implements _i2.SupabaseClient {
  _FakeSupabaseClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ContactService].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactService extends _i1.Mock implements _i3.ContactService {
  MockContactService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SupabaseClient get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeSupabaseClient_0(
              this,
              Invocation.getter(#client),
            ),
          )
          as _i2.SupabaseClient);

  @override
  _i4.Future<List<Map<String, dynamic>>> getContacts() =>
      (super.noSuchMethod(
            Invocation.method(#getContacts, []),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<Map<String, dynamic>> getContactById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getContactById, [id]),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> addContact(Map<String, dynamic>? contact) =>
      (super.noSuchMethod(
            Invocation.method(#addContact, [contact]),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> updateContact(
    String? id,
    Map<String, dynamic>? contact,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateContact, [id, contact]),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<void> deleteContact(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteContact, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
